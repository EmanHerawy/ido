{
  "address": "0x2E9d30761DB97706C536A112B9466433032b28e3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startTimeSale_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mintPrice_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "wallets_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AirDropRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newParice",
          "type": "uint256"
        }
      ],
      "name": "UpdateMintPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "availableTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWallets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numberOfNFTs",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        }
      ],
      "name": "setMintPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTimeSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "updateSaleStartTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4b363703994df1ad8182456ae0f5d273b58ae5c5cbb0b012de12e87ecdafbf7d",
  "receipt": {
    "to": null,
    "from": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4",
    "contractAddress": "0x2E9d30761DB97706C536A112B9466433032b28e3",
    "transactionIndex": 1,
    "gasUsed": "1190287",
    "logsBloom": "0x
    "blockHash": "0x064422292280369401a0459b7ffe83544612d84347fe58a0245c28364ba95b6a",
    "transactionHash": "0x4b363703994df1ad8182456ae0f5d273b58ae5c5cbb0b012de12e87ecdafbf7d",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 15372801,
        "transactionHash": "0x4b363703994df1ad8182456ae0f5d273b58ae5c5cbb0b012de12e87ecdafbf7d",
        "address": "0x2E9d30761DB97706C536A112B9466433032b28e3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc4"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x064422292280369401a0459b7ffe83544612d84347fe58a0245c28364ba95b6a"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 15372801,
        "transactionHash": "0x4b363703994df1ad8182456ae0f5d273b58ae5c5cbb0b012de12e87ecdafbf7d",
        "address": "0x2E9d30761DB97706C536A112B9466433032b28e3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc4",
          "0x0000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc4"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x064422292280369401a0459b7ffe83544612d84347fe58a0245c28364ba95b6a"
      }
    ],
    "blockNumber": 15372801,
    "cumulativeGasUsed": "1250226",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1640704213,
    "100000000000000",
    8888,
    [
      "0x2819C6d61e4c83bc53dD17D4aa00deDBe35894AA"
    ],
    "0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee",
    "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
  ],
  "solcInputHash": "5e3c0820e6fb3606fe85dfbc9c749644",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTimeSale_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintPrice_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"wallets_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirDropRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newParice\",\"type\":\"uint256\"}],\"name\":\"UpdateMintPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"availableTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numberOfNFTs\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"name\":\"setMintPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimeSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"updateSaleStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"availableTokenCount()\":{\"details\":\"Check whether tokens are still available\",\"returns\":{\"_0\":\"the available token count\"}},\"maxSupply()\":{\"details\":\"Get the max Supply\",\"returns\":{\"_0\":\"the maximum token count\"}},\"mint(uint256)\":{\"details\":\"called only when sale is startedcalled only when not paused`_numberOfNFTs` can't zeromust not xceed the cap\",\"params\":{\"_numberOfNFTs\":\"number of NFT to be minted emit Transfer\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"tokenCount()\":{\"details\":\"Get the current token count\",\"returns\":{\"_0\":\"the created token count\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"updateSaleStartTime(uint256)\":{\"details\":\"`__startTimeURI` must be more than the current time\",\"params\":{\"_startTime\":\"new _startTime\"}},\"withdraw()\":{\"details\":\"Withdraw accumulated balance for `wallets`\"}},\"title\":\"TheKingCollection With Eth contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(uint256)\":{\"notice\":\"caller should pay the required price\"},\"updateSaleStartTime(uint256)\":{\"notice\":\"Only woner can call it\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/launchpadProjects/erc721/AnimaliaTitans.sol\":\"AnimaliaTitans\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xa681e276ffa5896274bd7fbb01a1258190d7b72215208606db00d44aa4890811\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\"},\"contracts/extensions/PausableNFT.sol\":{\"content\":\"pragma solidity 0.8.4;\\n\\n//SPDX-License-Identifier: AGPL-3.0-only\\n/*\\n        ,                                                                       \\n  %%%%%%%%%%%%%%                                                      %%%%%%%   \\n %%%           ./    %%                                %%%          %%%       %%\\n%%%   ,,,,,,         %%,,,,,,.    ,,,      ,    ,,,,   %%%,,,,,,   %%%%%%%%%*   \\n %%%       ,,,,,     %%       %%%%%%%%%%   %%%%%%%/    %%%      %%%%%%%%%#    %%\\n  %%%%%*      ,,,    %%      %%%       %%  %%%         %%%         (%%        %%\\n      ,%%%%%   ,,,   %%%     %%%       %%  %%%         %%%         (%%        %%\\n  ,           ,,,     %%%%%%  .%%%%%%% %%  %%%          #%%%%%(    (%%        %%\\n  ,,,,,,,,,,,,,,                                                                */\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport '@openzeppelin/contracts/security/Pausable.sol';\\n\\n/// @title  AnyNFT With Eth contract\\n//\\n/// @author startfi team\\nabstract contract PausableNFT is Pausable, Ownable {\\n    /**************************libraries ********** */\\n\\n    /***************************Declarations go here ********** */\\n    // stat var\\n\\n    // tokenID => timestamp\\n\\n    // event\\n\\n    // modifier\\n    /******************************************* constructor goes here ********************************************************* */\\n    constructor(address owner_) {\\n        transferOwnership(owner_);\\n    }\\n\\n    /******************************************* modify state functions go here ********************************************************* */\\n    /**\\n     * @dev Pauses all token transfers.\\n     *\\n     * See {ERC721Pausable} and {Pausable-_pause}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the `PAUSER_ROLE`.\\n     */\\n    function pause() external virtual onlyOwner {\\n        _pause();\\n    }\\n\\n    /**\\n     * @dev Unpauses all token transfers.\\n     *\\n     * See {ERC721Pausable} and {Pausable-_unpause}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the `PAUSER_ROLE`.\\n     */\\n    function unpause() external virtual onlyOwner {\\n        _unpause();\\n    }\\n}\\n\",\"keccak256\":\"0x5c7bc81b066c45a13e75cd32a86744ea40180352cc11927ac70104d4de81d45f\",\"license\":\"AGPL-3.0-only\"},\"contracts/extensions/WithLimitedSupply.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\n \\n /// @title A token tracker that limits the token supply and increments token IDs on each new mint.\\nabstract contract WithLimitedSupply {\\n \\n    // Keeps track of how many we have minted\\n    uint256 private _tokenCount;\\n\\n    /// @dev The maximum count of tokens this token tracker will hold.\\n    uint256 private immutable _maxSupply;\\n\\n    modifier isWithinCapLimit(uint256 _numberOfNFTs) virtual {\\n        require((tokenCount() + _numberOfNFTs) <= _maxSupply, 'Purchase exceeds max supply');\\n        _;\\n    }\\n\\n\\n    /// @param amount Check whether number of tokens are still available\\n    /// @dev Check whether tokens are still available\\n    modifier ensureAvailabilityFor(uint256 amount) {\\n        require(availableTokenCount() >= amount, 'Requested number of tokens not available');\\n        _;\\n    }\\n\\n    /// Instanciate the contract\\n    /// @param maxSupply_ how many tokens this collection should hold\\n    constructor(uint256 maxSupply_) {\\n        _maxSupply = maxSupply_;\\n    }\\n\\n    /// @dev Get the max Supply\\n    /// @return the maximum token count\\n    function maxSupply() public view returns (uint256) {\\n        return _maxSupply;\\n    }\\n\\n    /// @dev Get the current token count\\n    /// @return the created token count\\n    function tokenCount() public view returns (uint256) {\\n        return _tokenCount;\\n    }\\n\\n    /// @dev Check whether tokens are still available\\n    /// @return the available token count\\n    function availableTokenCount() public view returns (uint256) {\\n        return maxSupply() - tokenCount();\\n    }\\n\\n    /// @dev Increment the token count and fetch the latest count\\n    /// @return the next token id\\n    function _increase(uint256 amount) internal virtual ensureAvailabilityFor(amount) returns (uint256) {\\n \\n        _tokenCount+=amount;\\n\\n        return _tokenCount;\\n    }\\n}\\n\",\"keccak256\":\"0x3ce8b7111947d1b3756a37f59b524db2a4e64d4812af4a7716f89dcab4d3fcd2\",\"license\":\"MIT\"},\"contracts/extensions/WithStartTime.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\n/// @title mange start time for sale\\nabstract contract WithStartTime {\\n    uint256 private _startTimeSale;\\n\\n    constructor(uint256 startTime_) {\\n        _startTimeSale = startTime_;\\n    }\\n\\n    modifier isSaleStarted() {\\n        require(_startTimeSale <= block.timestamp && _startTimeSale != 0, 'Sale did not start yet');\\n\\n        _;\\n    }\\n    modifier isSaleNotStarted() {\\n        require(_startTimeSale > block.timestamp || _startTimeSale == 0, 'Sale has started');\\n\\n        _;\\n    }\\n\\n    /// @notice Only woner can call it\\n    /// @dev  `__startTimeURI` must be more than the current time\\n    /// @param _startTime new _startTime\\n    function _setSaleStartTime(uint256 _startTime) internal {\\n        require(_startTime > block.timestamp, 'Can not set time back');\\n        _startTimeSale = _startTime;\\n    }\\n\\n    function startTimeSale() external view returns (uint256) {\\n        return _startTimeSale;\\n    }\\n}\\n\",\"keccak256\":\"0xdd4a1e86db4e5b3fb7def67c38c29f97dd794fb83272b2cade5e6916742ae8fa\",\"license\":\"MIT\"},\"contracts/extensions/WithTokenPayment.sol\":{\"content\":\"pragma solidity 0.8.4;\\n\\n//SPDX-License-Identifier: AGPL-3.0-only\\n/*\\n        ,                                                                       \\n  %%%%%%%%%%%%%%                                                      %%%%%%%   \\n %%%           ./    %%                                %%%          %%%       %%\\n%%%   ,,,,,,         %%,,,,,,.    ,,,      ,    ,,,,   %%%,,,,,,   %%%%%%%%%*   \\n %%%       ,,,,,     %%       %%%%%%%%%%   %%%%%%%/    %%%      %%%%%%%%%#    %%\\n  %%%%%*      ,,,    %%      %%%       %%  %%%         %%%         (%%        %%\\n      ,%%%%%   ,,,   %%%     %%%       %%  %%%         %%%         (%%        %%\\n  ,           ,,,     %%%%%%  .%%%%%%% %%  %%%          #%%%%%(    (%%        %%\\n  ,,,,,,,,,,,,,,                                                                */\\n\\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\\nimport '@openzeppelin/contracts/interfaces/IERC20.sol';\\n\\n/// @title  WithTokenPayment contract\\n//\\ncontract WithTokenPayment is ReentrancyGuard {\\n    /**************************libraries ********** */\\n\\n    /***************************Declarations go here ********** */\\n    // stat var\\n    uint256 private _mintPrice;\\n\\n    IERC20 private immutable _erc20Token;\\n    address[] private _wallets;\\n\\n    // event\\n    event UpdateMintPrice(uint256 newParice);\\n    event Withdrawn(address payee, uint256 amount);\\n\\n    // modifier\\n\\n    /******************************************* constructor goes here ********************************************************* */\\n    constructor(\\n        address[] memory wallets_,\\n        address token_,\\n        uint256 mintPrice_\\n    ) {\\n        _wallets = wallets_;\\n        _mintPrice = mintPrice_;\\n\\n        _erc20Token = IERC20(token_);\\n    }\\n\\n    /******************************************* read state functions go here ********************************************************* */\\n\\n    /******************************************* modify state functions go here ********************************************************* */\\n    function _getAllowance(address owner) internal view returns (uint256) {\\n        return _erc20Token.allowance(owner, address(this));\\n    }\\n\\n    function mintPrice() public view returns (uint256) {\\n        return _mintPrice;\\n    }\\n\\n    function _transferPayment(address sender, uint256 amount) internal nonReentrant returns (bool) {\\n        return _erc20Token.transferFrom(sender, address(this), amount);\\n    }\\n\\n    function getWallets() external view returns (address[] memory) {\\n        return _wallets;\\n    }\\n\\n    /**\\n     * @dev Withdraw accumulated balance for a wallet 1 and wallet 2, forwarding all gas to the\\n     * recipient.\\n     *\\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\\n     * Make sure you trust the recipient, or are either following the\\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\\n     *\\n     */\\n    function _withdraw() internal virtual nonReentrant {\\n        uint256 share = _erc20Token.balanceOf(address(this)) / _wallets.length;\\n        require(share > 0, \\\"Can't split zero shares\\\");\\n        for (uint256 index = 0; index < _wallets.length; index++) {\\n            emit Withdrawn(_wallets[index], share);\\n\\n            require(_erc20Token.transfer(_wallets[index], share), \\\"Couldn't transfer token\\\");\\n        }\\n    }\\n\\n    function _setMintPrice(uint256 mintPrice_) internal {\\n        require(mintPrice_ > 0, 'Zero value is not allowed');\\n        _mintPrice = mintPrice_;\\n        emit UpdateMintPrice(mintPrice_);\\n    }\\n}\\n\",\"keccak256\":\"0x250df997a99e629920207b85982c2a702f5c2e7d7c0ce3b58870a5c9efa31fe7\",\"license\":\"AGPL-3.0-only\"},\"contracts/launchpadProjects/erc721/AnimaliaTitans.sol\":{\"content\":\"pragma solidity 0.8.4;\\n\\n//SPDX-License-Identifier: AGPL-3.0-only\\n/*\\n        ,                                                                       \\n  %%%%%%%%%%%%%%                                                      %%%%%%%   \\n %%%           ./    %%                                %%%          %%%       %%\\n%%%   ,,,,,,         %%,,,,,,.    ,,,      ,    ,,,,   %%%,,,,,,   %%%%%%%%%*   \\n %%%       ,,,,,     %%       %%%%%%%%%%   %%%%%%%/    %%%      %%%%%%%%%#    %%\\n  %%%%%*      ,,,    %%      %%%       %%  %%%         %%%         (%%        %%\\n      ,%%%%%   ,,,   %%%     %%%       %%  %%%         %%%         (%%        %%\\n  ,           ,,,     %%%%%%  .%%%%%%% %%  %%%          #%%%%%(    (%%        %%\\n  ,,,,,,,,,,,,,,                                                                */\\n\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\nimport '../../extensions/WithLimitedSupply.sol';\\nimport '../../extensions/WithTokenPayment.sol';\\nimport '../../extensions/WithStartTime.sol';\\nimport '../../extensions/PausableNFT.sol';\\n\\n/// @title  TheKingCollection With Eth contract\\n//\\n\\ncontract AnimaliaTitans is WithLimitedSupply, WithStartTime, PausableNFT, WithTokenPayment {\\n    /**************************libraries ********** */\\n    using Strings for uint256;\\n    /***************************Declarations go here ********** */\\n\\n    // event\\n    event AirDropRequested(address beneficiary, uint256 amount);\\n\\n    // modifier\\n    /******************************************* constructor goes here ********************************************************* */\\n    constructor(\\n        uint256 startTimeSale_,\\n        uint256 mintPrice_,\\n        uint256 maxSupply_,\\n    \\n        address[] memory wallets_,\\n        address _token,\\n        address owner_\\n    )\\n        // @dev : static value here to resolve (Stack too deep) issue\\n\\n        WithLimitedSupply(maxSupply_)\\n        WithTokenPayment(wallets_,_token, mintPrice_)\\n        PausableNFT(owner_)\\n        WithStartTime(startTimeSale_)\\n    {\\n        //  _revealTime = revealTime_;\\n    }\\n\\n    /******************************************* read state functions go here ********************************************************* */\\n\\n    /// @notice caller should pay the required price\\n    /// @dev  called only when sale is started\\n    /// @dev  called only when not paused\\n    /// @dev  `_numberOfNFTs` can't zero\\n    /// @dev must not xceed the cap\\n    /// @param _numberOfNFTs number of NFT to be minted\\n    /// emit Transfer\\n    function mint(uint256 _numberOfNFTs) external  whenNotPaused isSaleStarted isWithinCapLimit(_numberOfNFTs) {\\n        require(_numberOfNFTs > 0, 'invalid_amount');\\n        uint256 _price = mintPrice() * _numberOfNFTs;\\n        require(_price  <= _getAllowance(_msgSender()), 'ETH value not correct');\\n        _increase(_numberOfNFTs);\\n       require( _transferPayment(_msgSender(),_price),\\\"Payment failed\\\");\\n        emit AirDropRequested(_msgSender(), _numberOfNFTs);\\n    }\\n\\n    /// @notice Only woner can call it\\n    /// @dev  `__startTimeURI` must be more than the current time\\n    /// @param _startTime new _startTime\\n    function updateSaleStartTime(uint256 _startTime) external onlyOwner isSaleNotStarted {\\n        _setSaleStartTime(_startTime);\\n    }\\n        function setMintPrice(uint256 price_) external onlyOwner whenPaused {\\n       _setMintPrice(price_);\\n    }\\n    /**\\n     * @dev Withdraw accumulated balance for `wallets`\\n     *\\n     */\\n    function withdraw() external onlyOwner {\\n        _withdraw();\\n    }\\n}\\n\",\"keccak256\":\"0xefadfec9f766ac24004471ab6937b10656e22ec20b7500f23c0cf05feeb89e1f\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b50604051620015e0380380620015e0833981016040819052620000349162000272565b608084905260018690556002805460ff191690558282868362000057336200009f565b6200006281620000f9565b50600160035582516200007d906005906020860190620001d4565b5060045560601b6001600160601b03191660a05250620003a295505050505050565b600280546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002546001600160a01b036101009091041633146200015f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000156565b620001d1816200009f565b50565b8280548282559060005260206000209081019282156200022c579160200282015b828111156200022c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001f5565b506200023a9291506200023e565b5090565b5b808211156200023a57600081556001016200023f565b80516001600160a01b03811681146200026d57600080fd5b919050565b60008060008060008060c087890312156200028b578182fd5b865160208089015160408a015160608b01519399509097509550906001600160401b0380821115620002bb578485fd5b818a0191508a601f830112620002cf578485fd5b815181811115620002e457620002e46200038c565b8060051b604051601f19603f830116810181811085821117156200030c576200030c6200038c565b604052828152858101935084860182860187018f10156200032b578889fd5b8895505b838610156200035857620003438162000255565b8552600195909501949386019386016200032f565b50809850505050505050620003706080880162000255565b91506200038060a0880162000255565b90509295509295509295565b634e487b7160e01b600052604160045260246000fd5b60805160a05160601c6111f2620003ee6000396000818161095201528181610aae01528181610d8c0152610f1f0152600081816101b5015281816104ce015261070501526111f26000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da7878c11610097578063db7a460511610066578063db7a4605146101d9578063e14ca353146101ee578063f2fde38b146101f6578063f4a0a5281461020957600080fd5b80638da7878c146101905780639f181b5e14610198578063a0712d68146101a0578063d5abeb01146101b357600080fd5b80636817c76c116100d35780636817c76c14610145578063715018a6146101575780638456cb591461015f5780638da5cb5b1461016757600080fd5b8063295e4edf146101055780633ccfd60b1461011a5780633f4ba83a146101225780635c975abb1461012a575b600080fd5b610118610113366004611080565b61021c565b005b6101186102ca565b610118610322565b60025460ff1660405190151581526020015b60405180910390f35b6004545b60405190815260200161013c565b610118610378565b6101186103d0565b60025461010090046001600160a01b03166040516001600160a01b03909116815260200161013c565b600154610149565b600054610149565b6101186101ae366004611080565b610426565b7f0000000000000000000000000000000000000000000000000000000000000000610149565b6101e1610699565b60405161013c91906110b0565b6101496106fb565b610118610204366004611032565b61072e565b610118610217366004611080565b6107ea565b6002546001600160a01b0361010090910416331461026f5760405162461bcd60e51b8152602060048201819052602482015260008051602061119d83398151915260448201526064015b60405180910390fd5b42600154118061027f5750600154155b6102be5760405162461bcd60e51b815260206004820152601060248201526f14d85b19481a185cc81cdd185c9d195960821b6044820152606401610266565b6102c78161088a565b50565b6002546001600160a01b036101009091041633146103185760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b6103206108de565b565b6002546001600160a01b036101009091041633146103705760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b610320610bef565b6002546001600160a01b036101009091041633146103c65760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b6103206000610c82565b6002546001600160a01b0361010090910416331461041e5760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b610320610ce9565b60025460ff161561046c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610266565b426001541115801561047f575060015415155b6104cb5760405162461bcd60e51b815260206004820152601660248201527f53616c6520646964206e6f7420737461727420796574000000000000000000006044820152606401610266565b807f0000000000000000000000000000000000000000000000000000000000000000816104f760005490565b61050191906110fd565b111561054f5760405162461bcd60e51b815260206004820152601b60248201527f50757263686173652065786365656473206d617820737570706c7900000000006044820152606401610266565b600082116105905760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5917d85b5bdd5b9d60921b6044820152606401610266565b60008261059c60045490565b6105a69190611135565b90506105b133610d64565b8111156106005760405162461bcd60e51b815260206004820152601560248201527f4554482076616c7565206e6f7420636f727265637400000000000000000000006044820152606401610266565b61060983610e0e565b506106143382610e99565b6106515760405162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b6044820152606401610266565b7f0ac168a421a6d879f3b9844555187adb0a7f06d5f825453fc8dd83f66dc77bbb33604080516001600160a01b039092168252602082018690520160405180910390a1505050565b606060058054806020026020016040519081016040528092919081815260200182805480156106f157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106d3575b5050505050905090565b60008054610729907f0000000000000000000000000000000000000000000000000000000000000000611154565b905090565b6002546001600160a01b0361010090910416331461077c5760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b6001600160a01b0381166107e15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610266565b6102c781610c82565b6002546001600160a01b036101009091041633146108385760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b60025460ff166108815760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610266565b6102c781610fa7565b4281116108d95760405162461bcd60e51b815260206004820152601560248201527f43616e206e6f74207365742074696d65206261636b00000000000000000000006044820152606401610266565b600155565b600260035414156109315760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610266565b60026003556005546040516370a0823160e01b8152306004820152600091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561099c57600080fd5b505afa1580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d49190611098565b6109de9190611115565b905060008111610a305760405162461bcd60e51b815260206004820152601760248201527f43616e27742073706c6974207a65726f207368617265730000000000000000006044820152606401610266565b60005b600554811015610be6577f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d560058281548110610a7f57634e487b7160e01b600052603260045260246000fd5b60009182526020918290200154604080516001600160a01b0390921682529181018590520160405180910390a17f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb60058381548110610afc57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260248101859052604401602060405180830381600087803b158015610b5057600080fd5b505af1158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b889190611060565b610bd45760405162461bcd60e51b815260206004820152601760248201527f436f756c646e2774207472616e7366657220746f6b656e0000000000000000006044820152606401610266565b80610bde8161116b565b915050610a33565b50506001600355565b60025460ff16610c385760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610266565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600280546001600160a01b0383811661010081810274ffffffffffffffffffffffffffffffffffffffff001985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60025460ff1615610d2f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610266565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c653390565b604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063dd62ed3e9060440160206040518083038186803b158015610dd057600080fd5b505afa158015610de4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e089190611098565b92915050565b60008180610e1a6106fb565b1015610e795760405162461bcd60e51b815260206004820152602860248201527f526571756573746564206e756d626572206f6620746f6b656e73206e6f7420616044820152677661696c61626c6560c01b6064820152608401610266565b82600080828254610e8a91906110fd565b90915550506000549392505050565b600060026003541415610eee5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610266565b60026003556040516323b872dd60e01b81526001600160a01b038481166004830152306024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401602060405180830381600087803b158015610f6357600080fd5b505af1158015610f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9b9190611060565b60016003559392505050565b60008111610ff75760405162461bcd60e51b815260206004820152601960248201527f5a65726f2076616c7565206973206e6f7420616c6c6f776564000000000000006044820152606401610266565b60048190556040518181527f0f6e30cbea7cb67e47bd9d9c28efec570b560826aef4cf586a3b52a2e45396d19060200160405180910390a150565b600060208284031215611043578081fd5b81356001600160a01b0381168114611059578182fd5b9392505050565b600060208284031215611071578081fd5b81518015158114611059578182fd5b600060208284031215611091578081fd5b5035919050565b6000602082840312156110a9578081fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b818110156110f15783516001600160a01b0316835292840192918401916001016110cc565b50909695505050505050565b6000821982111561111057611110611186565b500190565b60008261113057634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561114f5761114f611186565b500290565b60008282101561116657611166611186565b500390565b600060001982141561117f5761117f611186565b5060010190565b634e487b7160e01b600052601160045260246000fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122013c8f5f9e6b970ac88f3d527a1bfc46b079fdb2ea7f1e58f7a819655e497d6e864736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80638da7878c11610097578063db7a460511610066578063db7a4605146101d9578063e14ca353146101ee578063f2fde38b146101f6578063f4a0a5281461020957600080fd5b80638da7878c146101905780639f181b5e14610198578063a0712d68146101a0578063d5abeb01146101b357600080fd5b80636817c76c116100d35780636817c76c14610145578063715018a6146101575780638456cb591461015f5780638da5cb5b1461016757600080fd5b8063295e4edf146101055780633ccfd60b1461011a5780633f4ba83a146101225780635c975abb1461012a575b600080fd5b610118610113366004611080565b61021c565b005b6101186102ca565b610118610322565b60025460ff1660405190151581526020015b60405180910390f35b6004545b60405190815260200161013c565b610118610378565b6101186103d0565b60025461010090046001600160a01b03166040516001600160a01b03909116815260200161013c565b600154610149565b600054610149565b6101186101ae366004611080565b610426565b7f0000000000000000000000000000000000000000000000000000000000000000610149565b6101e1610699565b60405161013c91906110b0565b6101496106fb565b610118610204366004611032565b61072e565b610118610217366004611080565b6107ea565b6002546001600160a01b0361010090910416331461026f5760405162461bcd60e51b8152602060048201819052602482015260008051602061119d83398151915260448201526064015b60405180910390fd5b42600154118061027f5750600154155b6102be5760405162461bcd60e51b815260206004820152601060248201526f14d85b19481a185cc81cdd185c9d195960821b6044820152606401610266565b6102c78161088a565b50565b6002546001600160a01b036101009091041633146103185760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b6103206108de565b565b6002546001600160a01b036101009091041633146103705760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b610320610bef565b6002546001600160a01b036101009091041633146103c65760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b6103206000610c82565b6002546001600160a01b0361010090910416331461041e5760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b610320610ce9565b60025460ff161561046c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610266565b426001541115801561047f575060015415155b6104cb5760405162461bcd60e51b815260206004820152601660248201527f53616c6520646964206e6f7420737461727420796574000000000000000000006044820152606401610266565b807f0000000000000000000000000000000000000000000000000000000000000000816104f760005490565b61050191906110fd565b111561054f5760405162461bcd60e51b815260206004820152601b60248201527f50757263686173652065786365656473206d617820737570706c7900000000006044820152606401610266565b600082116105905760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5917d85b5bdd5b9d60921b6044820152606401610266565b60008261059c60045490565b6105a69190611135565b90506105b133610d64565b8111156106005760405162461bcd60e51b815260206004820152601560248201527f4554482076616c7565206e6f7420636f727265637400000000000000000000006044820152606401610266565b61060983610e0e565b506106143382610e99565b6106515760405162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b6044820152606401610266565b7f0ac168a421a6d879f3b9844555187adb0a7f06d5f825453fc8dd83f66dc77bbb33604080516001600160a01b039092168252602082018690520160405180910390a1505050565b606060058054806020026020016040519081016040528092919081815260200182805480156106f157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106d3575b5050505050905090565b60008054610729907f0000000000000000000000000000000000000000000000000000000000000000611154565b905090565b6002546001600160a01b0361010090910416331461077c5760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b6001600160a01b0381166107e15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610266565b6102c781610c82565b6002546001600160a01b036101009091041633146108385760405162461bcd60e51b8152602060048201819052602482015260008051602061119d8339815191526044820152606401610266565b60025460ff166108815760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610266565b6102c781610fa7565b4281116108d95760405162461bcd60e51b815260206004820152601560248201527f43616e206e6f74207365742074696d65206261636b00000000000000000000006044820152606401610266565b600155565b600260035414156109315760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610266565b60026003556005546040516370a0823160e01b8152306004820152600091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561099c57600080fd5b505afa1580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d49190611098565b6109de9190611115565b905060008111610a305760405162461bcd60e51b815260206004820152601760248201527f43616e27742073706c6974207a65726f207368617265730000000000000000006044820152606401610266565b60005b600554811015610be6577f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d560058281548110610a7f57634e487b7160e01b600052603260045260246000fd5b60009182526020918290200154604080516001600160a01b0390921682529181018590520160405180910390a17f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb60058381548110610afc57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260248101859052604401602060405180830381600087803b158015610b5057600080fd5b505af1158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b889190611060565b610bd45760405162461bcd60e51b815260206004820152601760248201527f436f756c646e2774207472616e7366657220746f6b656e0000000000000000006044820152606401610266565b80610bde8161116b565b915050610a33565b50506001600355565b60025460ff16610c385760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610266565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600280546001600160a01b0383811661010081810274ffffffffffffffffffffffffffffffffffffffff001985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60025460ff1615610d2f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610266565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c653390565b604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063dd62ed3e9060440160206040518083038186803b158015610dd057600080fd5b505afa158015610de4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e089190611098565b92915050565b60008180610e1a6106fb565b1015610e795760405162461bcd60e51b815260206004820152602860248201527f526571756573746564206e756d626572206f6620746f6b656e73206e6f7420616044820152677661696c61626c6560c01b6064820152608401610266565b82600080828254610e8a91906110fd565b90915550506000549392505050565b600060026003541415610eee5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610266565b60026003556040516323b872dd60e01b81526001600160a01b038481166004830152306024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401602060405180830381600087803b158015610f6357600080fd5b505af1158015610f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9b9190611060565b60016003559392505050565b60008111610ff75760405162461bcd60e51b815260206004820152601960248201527f5a65726f2076616c7565206973206e6f7420616c6c6f776564000000000000006044820152606401610266565b60048190556040518181527f0f6e30cbea7cb67e47bd9d9c28efec570b560826aef4cf586a3b52a2e45396d19060200160405180910390a150565b600060208284031215611043578081fd5b81356001600160a01b0381168114611059578182fd5b9392505050565b600060208284031215611071578081fd5b81518015158114611059578182fd5b600060208284031215611091578081fd5b5035919050565b6000602082840312156110a9578081fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b818110156110f15783516001600160a01b0316835292840192918401916001016110cc565b50909695505050505050565b6000821982111561111057611110611186565b500190565b60008261113057634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561114f5761114f611186565b500290565b60008282101561116657611166611186565b500390565b600060001982141561117f5761117f611186565b5060010190565b634e487b7160e01b600052601160045260246000fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122013c8f5f9e6b970ac88f3d527a1bfc46b079fdb2ea7f1e58f7a819655e497d6e864736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "availableTokenCount()": {
        "details": "Check whether tokens are still available",
        "returns": {
          "_0": "the available token count"
        }
      },
      "maxSupply()": {
        "details": "Get the max Supply",
        "returns": {
          "_0": "the maximum token count"
        }
      },
      "mint(uint256)": {
        "details": "called only when sale is startedcalled only when not paused`_numberOfNFTs` can't zeromust not xceed the cap",
        "params": {
          "_numberOfNFTs": "number of NFT to be minted emit Transfer"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "tokenCount()": {
        "details": "Get the current token count",
        "returns": {
          "_0": "the created token count"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "updateSaleStartTime(uint256)": {
        "details": "`__startTimeURI` must be more than the current time",
        "params": {
          "_startTime": "new _startTime"
        }
      },
      "withdraw()": {
        "details": "Withdraw accumulated balance for `wallets`"
      }
    },
    "title": "TheKingCollection With Eth contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "mint(uint256)": {
        "notice": "caller should pay the required price"
      },
      "updateSaleStartTime(uint256)": {
        "notice": "Only woner can call it"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1681,
        "contract": "contracts/launchpadProjects/erc721/AnimaliaTitans.sol:AnimaliaTitans",
        "label": "_tokenCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1782,
        "contract": "contracts/launchpadProjects/erc721/AnimaliaTitans.sol:AnimaliaTitans",
        "label": "_startTimeSale",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 124,
        "contract": "contracts/launchpadProjects/erc721/AnimaliaTitans.sol:AnimaliaTitans",
        "label": "_paused",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 7,
        "contract": "contracts/launchpadProjects/erc721/AnimaliaTitans.sol:AnimaliaTitans",
        "label": "_owner",
        "offset": 1,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 209,
        "contract": "contracts/launchpadProjects/erc721/AnimaliaTitans.sol:AnimaliaTitans",
        "label": "_status",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1861,
        "contract": "contracts/launchpadProjects/erc721/AnimaliaTitans.sol:AnimaliaTitans",
        "label": "_mintPrice",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1867,
        "contract": "contracts/launchpadProjects/erc721/AnimaliaTitans.sol:AnimaliaTitans",
        "label": "_wallets",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}